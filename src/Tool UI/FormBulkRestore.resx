<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAAACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAABsAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwP+/v7+/v7+/v7+/v7+/v7+
        /v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+
        /v7+/v7+/v4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAD
        AwMDAwMDAwP+/v7+/v7+/v7+/v4AAAD+/v7+/v4AAAD+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v4A
        AAD+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAIADAwOAAACAgACAAAADAwP+/v7+/v4AAAAAAAD+/v4AAAAAAAAAAAAAAAAA
        AAD+/v7+/v7+/v7+/v7+/v7+/v7+/v4AAAAAAAAAAAAAAAD+/v7+/v7+/v7+/v7+/v7+/v7+/v4AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAADAwOAgACAgICAgICAgIADAwP+/v7+
        /v7+/v4AAAAAAAD+/v7+/v4AAAAAAAAAAAAAAAAAAAAAAAAAAAD+/v7+/v7+/v7+/v4AAAAAAAAAAAAA
        AAAAAAAAAAD+/v7+/v7+/v7+/v4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
        AwOAAACAgACAgICAgICAgIADAwP+/v7+/v7+/v7+/v4AAAAAAAAAAAAAAAD+/v4AAAAAAAAAAAD+/v4A
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+/v7+/v7+/v4AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAACAAACAgACAgICAgICAgIADAwP+/v7+/v7+/v7+/v7+/v7+
        /v7+/v4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+/v4AAAAAAAAAAAAA
        AAAAAAD+/v4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIADAwOAAACAAACAAACAgACA
        gICAgIADAwP+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v4AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+/v7+/v4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAIADAwOAgICAAACAAACAAACAAACAgICAgIADAwP+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+
        /v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v4AAAAAAAAAAAAAAAAAAAD+/v7+/v7+/v7+/v4AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIADAwOAgICAgICAgIADAwMDAwOAAACAgICAgIADAwP+/v7+
        /v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v4AAAAAAAAAAAAA
        AAD+/v7+/v7+/v7+/v7+/v7+/v4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwOAgICAgICAgICAgICA
        gIADAwMDAwOAAACAgICAgIADAwP+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+
        /v7+/v7+/v4AAAAAAAD+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v7+/v4AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAgICAgICAgICAgICAgICAgIADAwMDAwOAAACAgICAgAADAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgICAgICAgICAgICAgICAgIADAwMDAwOAAACA
        AAADAwMDAwOAgICAAACAAACAgICAAAADAwP+/v6AgICAgACAAAADAwMDAwOAgIDAwMD+/v7AwMCAgACA
        gIAAgICAgIAAgIAAgICAgICAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgICA
        gICAgICAgICAgICAgICAgIADAwMDAwMDAwOAAACAgICAgICAAACAAACAgACAAACAAAD+/v7AwMCAgAAD
        AwMDAwOAgIADAwPAwMDAwMDAwMCAgIDAwMAAgICAgIAAgIAAgIAAgIAAgIAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAADAwOAgICAgICAgAADAwMDAwOAgICAgIADAwOAgACAgICAAACAgICA
        gICAAACAAAADAwOAAAD+/v7AwMCAAACAAADAwMDAwMAAAIADAwOAgICAgIDAwMD+/v7AwMCAgIAAgIAA
        gIAAgIAAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwOAgICAgIADAwOAgICA
        gICAgICAgIADAwOAAAADAwOAAACAgACAgACAAACAAAADAwOAAAD+/v7AwMCAgACAgID+/v7AwMCAgIAA
        AIADAwMDAwMDAwOAgID+/v7AwMCAgIAAgIAAgIAAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAgICAgICAgICAgICAgICAgICAAACAAACAAAADAwMDAwMDAwOAgICAAAADAwOAAAADAwOA
        gAD+/v7AwMCAgICAgIDAwMD+/v7AwMAAAIADAwMDAwOAAAADAwMDAwOAgID+/v7AwMAAgIAAgIAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgICAgICAgICAgICAgACAAAADAwOAgIADAwMD
        AwMDAwMDAwMDAwOAAAADAwMDAwMDAwOAgID+/v7+/v6AgICAgIDAwMD+/v4AAIAAAIAAAIAAAIADAwMD
        AwMDAwMDAwMAgID+/v7AwMAAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgICA
        gICAgICAgICAAACAAAADAwOAAAADAwMAAIADAwMDAwMDAwMDAwMDAwOAAAADAwOAgID+/v7+/v6AgICA
        gICAgIAAAIAAAP8AAP8AAICAgICAgIADAwOAAAADAwMAAIAAAIDAwMD+/v4AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAACAgICAgIAAAIAAAICAAACAAACAgIADAwPAwMAAAIADAwMDAwMDAwMD
        AwMDAwOAAAADAwMDAwPAwMD+/v7+/v6AgIADAwMAAIAAAIAAAIADAwOAgIDAwMADAwOAAACAAAAAAIAA
        AIAAAICAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMAAIAAAIADAwOAAACA
        AACAAAADAwOAgIADAwMDAwMDAwMDAwMDAwMDAwMDAwOAAACAAAD+/v7+/v6AgIADAwMAAIAAAIADAwMD
        AwMDAwMDAwPAwMCAgICAAACAAAADAwMAAP8AAIAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAADAwMAgIAAAICAAACAAAADAwOAgIADAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwPAwMDAwMAAAIAAAIAAAIADAwMDAwMDAwMDAwMDAwOAgICAgICAAACAAACAAAAAAIAAgIAAAIAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMAAIADAwOAAACAAACAgICAAAADAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAAP/AwMAAAP8AAIADAwMDAwMDAwMDAwMDAwMDAwMDAwOA
        gICAgICAAACAAAADAwMAAIAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAD
        AwMDAwOAAACAAACAgIADAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAgICAgICAAACAAACAAAAAAIAAAIAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIADAwOAAACAAACAgICAgIADAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOAgIADAwOAAACA
        AAAAAIAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwOAAACAAACAgIAD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDAwMDAwMAgICAgICAAACAAAADAwMAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAADAwOAAACAAACAgACAgIADAwMDAwMDAwMDAwMDAwOAgIADAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOAAACAAACAAAAAAIAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwOAAACAAACAgACAgIADAwMDAwMDAwMDAwOA
        gICAgICAgIADAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwOAAACAAACAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwOA
        AACAAACAgICAgAADAwMDAwMDAwMDAwOAgICAgICAgICAgIADAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOAAACAAACAAACAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwOAAACAgICAAAADAwMDAwMDAwMDAwOAgICAgICAgIADAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOAAACA
        AACAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAADAwOAAACAAACAgICA
        AAADAwMDAwMDAwMDAwMDAwOAAACAgICAgACAAACAAAADAwMDAwOAgICAgICAgICAgICAgICAgICAgIAD
        AwMDAwMDAwMDAwMDAwMDAwOAAACAAACAAACAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAAADAwMDAwOAAACAgICAgICAgACAgICAAACAgACAgICAgICAgICAgIADAwMDAwMDAwMA
        gIAAAIAAAIAAAICAgIDAwMDAwMDAwMDAwMCAgICAAACAgACAAACAAACAAACAAACAAACAAACAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMDAwOAAACAgICAgICAgICAgICA
        gICAgICAgICAgACAgAADAwMDAwMDAwOAgICAgIAAAIAAAIAAAID+/v6AgIDAwMDAwMDAwMCAAACAAACA
        AACAAACAAACAAACAAACAAACAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA
        AAADAwMDAwOAAACAgACAAACAAACAAAADAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAgICAgICAgIDAwMDA
        wMD+/v6AAACAgADAwMDAwMCAAACAAACAAACAAACAAACAAACAAACAgAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIADAwMDAwMDAwOAAAADAwMDAwMDAwMDAwMDAwMDAwMDAwOA
        gIADAwMDAwMDAwOAgIDAwMD+/v7+/v7+/v7+/v6AgICAgICAgID+/v6AgICAAACAAACAAACAAACAAACA
        gACAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMDAwOAAAAAgIADAwMDAwMDAwPAwMDAwMD+/v7+/v7+/v7+/v7+/v6AgIDA
        wMD+/v7AwMCAgACAAAAAAICAgACAgACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAIADAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwOA
        gIDAwMDAwMDAwMD+/v7AwMDAwMDAwMCAgID+/v7+/v6AgACAgACAgIAAAIAAAIAAAIAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMDAwMDAwMDAwMDAwOA
        AAADAwMDAwMDAwMAAIADAwOAAAADAwOAgICAgICAgID+/v6AgIDAwMAAAP8AAP+AgID+/v7+/v6AgACA
        gACAgAAAAIAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAIADAwMDAwMDAwMDAwMDAwOAAAADAwMDAwMDAwMDAwMDAwOAgIADAwOAgICAgICAgIDAwMCA
        gIAAAIAAAP8AAIAAAP/+/v7AwMCAgICAgACAgACAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAAIAD
        AwMDAwMDAwOAgICAgICAgICAgICAgICAgIDAwMD+/v4AAICAgID+/v7AwMCAgICAgACAgACAgAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA
        AAADAwMDAwMDAwMDAwMDAwMDAwOAgICAgICAgICAgICAgICAgICAgICAgIDAwMD+/v7+/v7+/v7+/v7A
        wMDAwMDAwMDAwMCAgICAgACAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMDAwMDAwMDAwOAgICAgICAgICAgICAgIDAwMCA
        gIDAwMD+/v7+/v7+/v7+/v7+/v7+/v7+/v7AwMDAwMDAwMDAwMCAgIAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMD
        AwMDAwOAgICAgICAgICAgICAgICAgICAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCAgIAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIADAwMDAwOAgICAgICAgICAgICAgICAgICAgIDAwMDA
        wMDAwMDAwMDAwMCAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAgICAgICAgICAgICAgICAgICAgICAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////8AAP///////wAA//+AAAADAAD//AAAAAMAAP/wAAAAAwAA/+AAAAAD
        AAD/4AAAAAMAAP/AAAAAAwAA/4AAAAADAAD/AAAAAAMAAP4AAAAAAwAA/AAAAAADAAD8AAAAAAMAAPwA
        AAAAPwAA/AAAAAA/AAD8AAAAAD8AAPwAAAAAPwAA/AAAAAA/AAD8AAAAAD8AAPwAAAAAPwAA/AAAAAA/
        AAD8AAAAAD8AAPwAAAAAPwAA/AAAAAA/AAD8AAAAAD8AAPwAAAAAPwAA/AAAAAA/AAD8AAAAAD8AAPwA
        AAAAPwAA/AAAAAA/AAD8AAAAAD8AAPwAAAAAPwAA/AAAAAA/AAD+AAAAAD8AAP4AAAAAfwAA/gAAAAB/
        AAD/AAAAAP8AAP8AAAAA/wAA/4AAAAH/AAD/gAAAAf8AAP/AAAAD/wAA/+AAAAP/AAD/8AAAB/8AAP/8
        AAA//wAA//8AAP//AAD///AP//8AAP///////wAA////////AAA=
</value>
  </data>
</root>